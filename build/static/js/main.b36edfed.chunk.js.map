{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","utils/challengesAPI.js","components/challenges/challenges.js","components/charities/charities.js","components/challenges/category.js","components/layout/Footer.js","components/challenges/challengeNew.js","components/challenges/upload.js","components/challenges/challenge.js","components/challenges/createdchallenges.js","components/challenges/pickedchallenges.js","components/App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","NavbarBlue","onLogoutClick","e","preventDefault","props","this","console","log","className","Navbar","id","variant","Nav","Link","onClick","href","Component","connect","Landing","style","height","to","width","borderRadius","letterSpacing","Button","title","src","frameborder","allow","allowfullscreen","Register","onChange","setState","target","value","onSubmit","newUser","username","name","email","password","password2","registerUser","history","push","nextProps","paddingLeft","noValidate","htmlFor","error","marginTop","backgroundColor","color","userData","post","then","res","data","setItem","jwt_decode","catch","err","response","withRouter","Login","loginUser","component","rest","render","Dashboard","getChallenges","get","updateChallenge","challengeId","updatedValue","patch","getChallenge","ChallengeList","challenges","map","c","Card","Header","as","Body","Title","goal","Text","category","description","likes","pathname","_id","Charities","charityDesc1","charityDesc2","charityDesc3","charityDesc4","maxLength","Container","Row","Col","Img","length","substring","Category","shortDescription","checked","Footer","createChallenge","redirect","handleChange","bind","handleSubmit","event","challengeInput","creator_id","Upload","useState","fileInputState","previewSource","setPreviewSource","previewFile","file","reader","FileReader","readAsDataURL","onloadend","result","uploadImage","base64EncodedImage","a","fetch","method","body","JSON","stringify","files","alt","singleChallenge","incrementMe","newLikesCount","challenge","slice","challengeComplete","newStatus","status","fulfilledBy_id","componentDidMount","handleClick","challenge_id","user_id","put","pickChallenge","location","MyChallengeList","getCreatedChallenges","PickedChallengeList","getPickedChallenges","jwtToken","currentTime","Date","now","exp","App","exact","path","Challenges","MyCreatedChallenge","PickedChallenges","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b36edfed.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = (token) => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n// Register User\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then((res) => {\n      axios\n        .post(\"/api/users/login\", userData)\n        .then((res) => {\n          const { token } = res.data;\n          localStorage.setItem(\"jwtToken\", token);\n          setAuthToken(token);\n          const decoded = jwt_decode(token);\n          dispatch(setCurrentUser(decoded));\n          history.push(\"/dashboard\");\n        })\n        .catch((err) =>\n          dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data,\n          })\n        );\n    })\n    .catch((err) => {\n      console.log(err + \"There was an\");\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      });\n    });\n};\n// Login - get user token\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then((res) => {\n      // Save to localStorage\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data,\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n// Log user out\nexport const logoutUser = () => (dispatch) => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n  } from \"../actions/types\";\n  const isEmpty = require(\"is-empty\");\n  const initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n  };\n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;\n","import React, { Component } from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass NavbarBlue extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    console.log(user);\n    return (\n      <div className=\"container\">\n        <Navbar id=\"Navbar\" variant=\"primary\">\n          <Nav className=\"mr-auto\">\n            {user.id ? (\n              <>\n                <Nav.Link onClick={this.onLogoutClick}> Logout </Nav.Link>\n                <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n              </>\n            ) : (\n              <>\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/login\">Login</Nav.Link>\n                <Nav.Link href=\"/register\">Register</Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar>\n      </div>\n    );\n  }\n}\nNavbarBlue.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(NavbarBlue);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h1>\n              <b>Charity Tasker</b>\n            </h1>\n            <h4>A MERN App created as a Non-For Profit platform</h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Log in and create your own challenges for other users to complete.\n              A donation goal is attached to each challenge. Once the goal is\n              met, the challenge must be completed or the user who chose to\n              complete it has to donate!\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                }}\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n              >\n                <Button variant=\"warning\">Register</Button>\n              </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                }}\n                className=\"btn btn-large btn-flat waves-effect white black-text\"\n              >\n                <Button variant=\"warning\">Log In</Button>\n              </Link>\n            </div>\n\n            <iframe\n              title=\"Challenges\"\n              width=\"560\"\n              height=\"315\"\n              src=\"https://www.youtube.com/embed/XI8l61-xCOU\"\n              frameborder=\"0\"\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n              allowfullscreen\n            ></iframe>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser, /*loginUser*/ } from \"../../actions/authActions\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import className from \"classnames\";\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n    };\n    // const userData = {\n    //   email: this.state.email,\n    //   password: this.state.password\n    // };\n    this.props.registerUser(newUser, this.props.history);\n    // this.props.loginUser(userData, this.props.history)\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n          <h4>\n            <b>Register</b> below\n          </h4>\n          <p className=\"grey-text text-darken-1\">\n            Already have an account? <Link to=\"/login\">Log in</Link>\n          </p>\n        </div>\n        <form noValidate onSubmit={this.onSubmit} className=\"login\">\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">\n              Username\n              <input\n                onChange={this.onChange}\n                value={this.state.username}\n                error={errors.username}\n                id=\"username\"\n                type=\"text\"\n                className=\"form-control\"\n              />\n            </label>\n            <span className=\"red-text\">{errors.username}</span>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              Name\n              <input\n                onChange={this.onChange}\n                value={this.state.name}\n                error={errors.name}\n                id=\"name\"\n                type=\"text\"\n                className=\"form-control\"\n              />\n            </label>\n            <span className=\"red-text\">{errors.name}</span>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              Email\n              <input\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                id=\"email\"\n                className=\"form-control\"\n                type=\"email\"\n              />\n            </label>\n            <span className=\"red-text\">{errors.email}</span>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">\n              Password\n              <input\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                className=\"form-control\"\n                id=\"password\"\n                type=\"password\"\n              />\n            </label>\n            <span className=\"red-text\">{errors.password}</span>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password2\">\n              Confirm Password\n              <input\n                onChange={this.onChange}\n                value={this.state.password2}\n                error={errors.password2}\n                className=\"form-control\"\n                id=\"password2\"\n                type=\"password\"\n              />\n            </label>\n            <span className=\"red-text\">{errors.password2}</span>\n          </div>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\",\n                backgroundColor: \"#223623\",\n                color: \"white\",\n              }}\n              type=\"submit\"\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  onSubmit = (e) => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n          <h4>\n            <b>Login</b> below\n          </h4>\n          <p className=\"grey-text text-darken-1\">\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </p>\n        </div>\n        <form noValidate onSubmit={this.onSubmit} className=\"login\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              Email:\n              <input\n                onChange={this.onChange}\n                value={this.state.email}\n                error={errors.email}\n                className=\"form-control\"\n                id=\"email\"\n                type=\"email\"\n              />\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                onChange={this.onChange}\n                value={this.state.password}\n                error={errors.password}\n                className=\"form-control\"\n                id=\"password\"\n                type=\"password\"\n              />\n            </label>\n          </div>\n          <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n\n                backgroundColor: \"#223623\",\n                color: \"white\",\n              }}\n              type=\"submit\"\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  errors: state.errors,\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nclass Dashboard extends Component {\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    const { user } = this.props.auth;\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h2>\n              <b>Hey there,</b> {user.username}\n            </h2>\n            <h1 className=\"flow-text grey-text text-darken-1\">\n              Please choose an option below\n            </h1>\n            <div>\n              <Link to=\"/create_challenge\">Create a Challenge</Link>\n            </div>\n            <div>\n              <Link to=\"/challenges\">View Existing Challenges</Link>\n            </div>\n            <div>\n              <Link to=\"/mycreatedchallenges\">Created Challenges</Link>\n            </div>\n            <div>\n              <Link to=\"/pickedchallenges\">Picked challenges</Link>\n            </div>\n            <Link to=\"/charities\">\n              <div>Charities we work with</div>\n            </Link>\n            <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\",\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Logout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\n","import axios from \"axios\";\n\nexport const sendChallenge = (challengeInput) => {\n  console.log(challengeInput);\n\n  return axios.post(\"/api/challenges\", challengeInput);\n};\n\nexport const pickChallenge = (challenge_id, auth) => {\n  console.log(challenge_id);\n  console.log(auth);\n  const body = { challenge_id, user_id: auth.user.id };\n  return axios.put(\"/api/challenges\", body);\n};\n\nexport const getChallenges = () => {\n  return axios.get(\"https://charity-tasker.herokuapp.com/api/challenges\");\n};\n\nexport const updateLikes = (challengeId, newLikesCount) => {\n  const updatedValue = {\n    likes: newLikesCount,\n  };\n  return updateChallenge(challengeId, updatedValue);\n};\n\nexport const updateStatus = (challengeId, newStatus) => {\n  const updatedValue = {\n    status: newStatus,\n  };\n  return updateChallenge(challengeId, updatedValue);\n};\n\nexport const updateChallenge = (challengeId, updatedValue) => {\n  return axios.patch(\n    `https://charity-tasker.herokuapp.com/api/challenges/${challengeId}`,\n    updatedValue\n  );\n};\n\nexport const getCreatedChallenges = (auth) => {\n  const id = auth.user.id;\n  return axios.get(`https://charity-tasker.herokuapp.com/api/challenges?creator_id=${id}`);\n};\n\nexport const getPickedChallenges = (auth) => {\n  const id = auth.user.id;\n  return axios.get(`https://charity-tasker.herokuapp.com/api/challenges?fulfilledBy_id=${id}`);\n};\n\nexport const getChallenge = (id) => {\n  return axios.get(`https://charity-tasker.herokuapp.com/api/challenges/${id}`);\n};\n\n// import setAuthToken from \"../utils/setAuthToken\";\n// import jwt_decode from \"jwt-decode\";\n// import {\n//   GET_ERRORS,\n// //   SET_CURRENT_USER,\n// //   USER_LOADING\n// } from \"../actions/types\";\n// // Register User\n//  export const allChallenges = (challengeData, history) => dispatch => {\n//   axios\n//     .get(\"/api/challenges\", challengeData)\n//     // .then(res => history.push(\"/login\")) // re-direct to login on successful register\n//     .catch(err =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data\n//       })\n//     );\n// };\n// // Login - get user token\n// export const loginUser = userData => dispatch => {\n//   axios\n//     .post(\"/api/users/login\", userData)\n//     .then(res => {\n//       // Save to localStorage\n// // Set token to localStorage\n//       const { token } = res.data;\n//       localStorage.setItem(\"jwtToken\", token);\n//       // Set token to Auth header\n//       setAuthToken(token);\n//       // Decode token to get user data\n//       const decoded = jwt_decode(token);\n//       // Set current user\n//       dispatch(setCurrentUser(decoded));\n//     })\n//     .catch(err =>\n//       dispatch({\n//         type: GET_ERRORS,\n//         payload: err.response.data\n//       })\n//     );\n// };\n// // Set logged in user\n// export const setCurrentUser = decoded => {\n//   return {\n//     type: SET_CURRENT_USER,\n//     payload: decoded\n//   };\n// };\n// // User loading\n// export const setUserLoading = () => {\n//   return {\n//     type: USER_LOADING\n//   };\n// };\n// // Log user out\n// export const logoutUser = () => dispatch => {\n//   // Remove token from local storage\n//   localStorage.removeItem(\"jwtToken\");\n//   // Remove auth header for future requests\n//   setAuthToken(false);\n//   // Set current user to empty object {} which will set isAuthenticated to false\n//   dispatch(setCurrentUser({}));\n// };\n","import React, { Component } from \"react\";\nimport { getChallenges } from \"../../utils/challengesAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Button } from \"react-bootstrap\";\n\nclass ChallengeList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      challenges: [],\n    };\n  }\n\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    getChallenges().then((res) => this.setState({ challenges: res.data }));\n  }\n  render() {\n    // const { user } = this.props.auth;\n    return (\n      <div>\n        <h1>Challenges below</h1>\n        {this.state.challenges.map((c) => (\n          <>\n            <ul>\n              <Card variant=\"warning\">\n                <Card.Header as=\"h4\">{c.name}</Card.Header>\n                <Card.Body>\n                  <Card.Title>\n                    <li>Goal: {c.goal}</li>\n                  </Card.Title>\n                  <Card.Text>\n                    <li>Category: {c.category}</li>\n                    <li>Description: {c.description}</li>\n                    <li>Current Likes: {c.likes}</li>\n                  </Card.Text>\n                  <Link\n                    to={{\n                      pathname: `/challenge`,\n                      state: {\n                        _id: c._id,\n                      },\n                    }}\n                  >\n                    <Button variant=\"primary\">Go To Challenge</Button>\n                  </Link>\n                </Card.Body>\n              </Card>\n            </ul>\n          </>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default ChallengeList;\n","import React, { Component } from \"react\";\nimport { Card, Button, Container, Col, Row } from \"react-bootstrap\";\n\nclass Charities extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      charityDesc1:\n        \"The RSPCA is an independent, community-based charity providing animal care and protection services across the country.\",\n      charityDesc2:\n        \"The aim of founding StreetSmart was to simultaneously break down inaccurate prejudices about homelessness, raise vital funds for important smaller, local organisations and strengthen them through collaboration and connecting them to their community.\",\n      charityDesc3:\n        \"The very first Ronald McDonald House in Australia opened in Camperdown, near the Children’s Hospital in 1981. In 1995, RMHC Charities Greater Western Sydney (GWS) relocated the House to Westmead, to continue providing vital services to families after the hospital had relocated to Western Sydney. Today, our Westmead House provides a safe place to stay for around 1,360 families per year..\",\n      charityDesc4:\n        \"Starlight's mission is To brighten the lives of seriously ill children and their families .Because sick kids are still kids at heart... \",\n      maxLength: 80,\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Below are the 4 charities we work with</h1>\n        <Container>\n          <Row>\n            <Col>\n              <Card\n                style={{\n                  width: \"15rem\",\n                  backgroundColor: \"#223623\",\n                  color: \"#B6CA91\",\n                }}\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src=\"https://www.rspca.org.au/sites/all/themes/rspca/logo.png\"\n                />\n                <Card.Body>\n                  <Card.Title className=\"cardTitle\">\n                    For the Animal Lovers\n                  </Card.Title>\n                  <Card.Text>\n                    {this.state.charityDesc1.length > this.state.maxLength\n                      ? this.state.charityDesc1.substring(\n                          0,\n                          this.state.maxLength - 3\n                        ) + \"...\"\n                      : this.state.charityDesc1}\n                  </Card.Text>\n                  <a href=\"https://www.rspca.org.au/about-us\">\n                    <Button variant=\"primary\">RSPCA Website</Button>\n                  </a>\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card\n                style={{\n                  width: \"15rem\",\n                  backgroundColor: \"#223623\",\n                  color: \"#B6CA91\",\n                }}\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src=\"https://streetsmartaustralia.org/wp-content/uploads/2014/10/StreetSmart-Logo-landscape-black-80h.png\"\n                />\n                <Card.Body>\n                  <Card.Title className=\"cardTitle\">\n                    Help those in need\n                  </Card.Title>\n                  <Card.Text>\n                    {this.state.charityDesc2.length > this.state.maxLength\n                      ? this.state.charityDesc2.substring(\n                          0,\n                          this.state.maxLength - 3\n                        ) + \"...\"\n                      : this.state.charityDesc2}\n                  </Card.Text>\n                  <a href=\"https://streetsmartaustralia.org/\">\n                    <Button variant=\"primary\">StreetSmart</Button>\n                  </a>\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card\n                style={{\n                  width: \"15rem\",\n                  backgroundColor: \"#223623\",\n                  color: \"#B6CA91\",\n                }}\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src=\"https://www.rmhc.org.au/sites/default/files/2019-05/RMHC_GWSyd_main_whitetext.png\"\n                />\n                <Card.Body>\n                  <Card.Title className=\"cardTitle\">\n                    To you hungry kids\n                  </Card.Title>\n                  <Card.Text>\n                    {this.state.charityDesc3.length > this.state.maxLength\n                      ? this.state.charityDesc3.substring(\n                          0,\n                          this.state.maxLength - 3\n                        ) + \"...\"\n                      : this.state.charityDesc3}\n                  </Card.Text>\n                  <a href=\"https://www.rmhc.org.au/our-chapters/rmhc-greater-western-sydney\">\n                    <Button variant=\"primary\">Ronald McDonald</Button>\n                  </a>\n                </Card.Body>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card\n                style={{\n                  width: \"15rem\",\n                  backgroundColor: \"#223623\",\n                  color: \"#B6CA91\",\n                }}\n              >\n                <Card.Img\n                  variant=\"top\"\n                  src=\"https://starlight.org.au/themes/stl/images/logo.png\"\n                />\n                <Card.Body>\n                  <Card.Title className=\"cardTitle\">\n                    Starlight - Children in Need\n                  </Card.Title>\n                  <Card.Text>\n                    {this.state.charityDesc4.length > this.state.maxLength\n                      ? this.state.charityDesc4.substring(\n                          0,\n                          this.state.maxLength - 3\n                        ) + \"...\"\n                      : this.state.charityDesc4}\n                  </Card.Text>\n                  <a href=\"https://www.rspca.org.au/about-us\">\n                    <Button variant=\"primary\">Startlight</Button>\n                  </a>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Charities;\n","//this page is currently not in use. However, will have a link to different catagories in which this page is called\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getChallenges } from \"../../utils/challengesAPI\";\n// import { Link } from \"react-router-dom\";\n\nclass Category extends Component {\n  constructor() {\n    super();\n    this.state = {\n      challenges: [],\n    };\n  }\n\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    getChallenges().then((res) => this.setState({ challenges: res.data }));\n  }\n  render() {\n    // const { user } = this.props.auth;\n    return (\n      <div>\n        <h1>Challenges below</h1>\n        {this.state.challenges.map((c) => (\n          <>\n            <ul>\n              <li>{c.name}</li>\n\n              <li>{c.category}</li>\n              <li>{c.goal}</li>\n              <li>{c.shortDescription}</li>\n            </ul>\n            <input type=\"checkbox\" checked={c.checked ? true : false} />\n          </>\n        ))}\n      </div>\n    );\n  }\n}\nCategory.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(Category);\n","import React, { Component } from \"react\";\nimport Charities from \"../charities/charities.js\";\nimport { Container } from \"react-bootstrap\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <Container>\n        <Charities />\n      </Container>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { sendChallenge } from \"../../utils/challengesAPI\";\nimport { Redirect } from \"react-router-dom\";\n\nclass createChallenge extends Component {\n  constructor() {\n    super();\n    this.state = {\n      category: \"Food\",\n      description: \"\",\n      name: \"\",\n      shortDescription: \"\",\n      goal: 0,\n      redirect: null,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    sendChallenge({\n      category: this.state.category,\n      description: this.state.description,\n      name: this.state.name,\n      shortDescription: this.state.shortDescription,\n      goal: this.state.goal,\n      // token: localStorage.getItem(\"jwtToken\")\n      creator_id: this.props.auth.user.id,\n    }).then(this.setState({ redirect: \"/dashboard\" }));\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />;\n    }\n    return (\n      <div className=\"container\">\n        <h1>Create a new challenge</h1>\n        <form onSubmit={this.handleSubmit} className=\"login\">\n          <div className=\"form-group\">\n            <label>\n              Pick the type of challenge to be completed\n              <select\n                onChange={this.handleChange}\n                name=\"category\"\n                className=\"form-control\"\n              >\n                <option value=\"Food\">Food</option>\n                <option value=\"Adventure\">Adventure</option>\n                <option value=\"Video\">Video</option>\n                <option value=\"Personal\">Personal</option>\n              </select>\n            </label>\n          </div>\n          <br></br>\n          <div className=\"form-group\">\n            <label>\n              Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                onChange={this.handleChange}\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          <br></br>\n          <div className=\"form-group\">\n            <label>\n              Description\n              <textarea\n                name=\"description\"\n                onChange={this.handleChange}\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          <br></br>\n          <div className=\"form-group\">\n            <label>\n              Likes Goal:\n              <input\n                type=\"integer\"\n                name=\"goal\"\n                onChange={this.handleChange}\n                className=\"form-control\"\n              />\n            </label>\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            onSubmit={this.handleSubmit}\n            className=\"form-control\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\ncreateChallenge.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(createChallenge);\n","import React, { useState } from \"react\";\n\nexport default function Upload() {\n  const [fileInputState, /*setFileInputState*/] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState();\n  // const [selectedFile, setSelectedFile] = useState(\"\");\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = (e) => {\n    console.log(\"submitting\");\n    e.preventDefault();\n    if (!previewSource) return;\n    // const reader = new FileReader();\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = async (base64EncodedImage) => {\n    try {\n      await fetch(\"/api/upload\", {\n        method: \"POST\",\n        body: JSON.stringify({ data: base64EncodedImage }),\n        headers: { \"Content-type\": \"application/json\" },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Upload</h3>\n      <form onSubmit={handleSubmitFile}>\n        <input\n          className=\"upload\"\n          id=\"chooseFile\"\n          type=\"file\"\n          name=\"image\"\n          onChange={handleFileInputChange}\n          value={fileInputState}\n        />\n        <button className=\"upload\" type=\"submit\">\n          {\" \"}\n          Submit{\" \"}\n        </button>\n      </form>\n      {previewSource && (\n        <img src={previewSource} alt=\"chosen\" style={{ height: \"200px\" }} />\n      )}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {\n  getChallenge,\n  pickChallenge,\n  updateLikes,\n  updateStatus,\n} from \"../../utils/challengesAPI\";\nimport Upload from \"./upload.js\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\n\nclass singleChallenge extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      challenge: [true],\n      fulfilledBy_id: false,\n    };\n\n    this.componentDidMount = this.componentDidMount.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.incrementMe = this.incrementMe.bind(this);\n  }\n\n  handleClick() {\n    pickChallenge(this.state.challenge[0]._id, this.props.auth).then((res) =>\n      console.log(\"Updated\")\n    );\n  }\n\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    const { _id } = this.props.location.state;\n    getChallenge(_id).then((res) => this.setState({ challenge: res.data }));\n    if (this.state.challenge !== []) {\n      console.log(getChallenge());\n    }\n  }\n\n  incrementMe = () => {\n    const challenges = this.state.challenge.slice(0);\n    challenges[0].likes += 1;\n    this.setState({\n      challenges: challenges,\n    });\n    updateLikes(this.state.challenge[0]._id, challenges[0].likes);\n  };\n\n  challengeComplete = () => {\n    const challenges = this.state.challenge.slice(0);\n    challenges[0].status = \"Completed\";\n    this.setState({\n      challenges: challenges,\n    });\n    updateStatus(this.state.challenge[0]._id, challenges[0].status);\n  };\n\n  render() {\n    if (this.state.challenge.length === 0) {\n      return null;\n    }\n    // const { user } = this.props.auth;\n    return (\n      <div className=\"container\">\n        <h3>Challenge Title: {this.state.challenge[0].name}</h3>\n        <ul>\n          <Card>\n            <li className=\"singleChallengeList\">\n              <Card.Header>Category</Card.Header>\n              <br></br>\n              <Card.Text>{this.state.challenge[0].category}</Card.Text>\n            </li>\n            <li className=\"singleChallengeList\">\n              <Card.Header>Description</Card.Header>\n              <br></br>\n              <Card.Text>{this.state.challenge[0].description}</Card.Text>\n            </li>\n            <li className=\"singleChallengeList\">\n              <Card.Header>Likes Goal</Card.Header>\n              <br></br>\n              <Card.Text> {this.state.challenge[0].goal}</Card.Text>\n            </li>\n            <li className=\"singleChallengeList\">\n              <Card.Header>Likes</Card.Header>\n              <br></br>\n              <Card.Text> {this.state.challenge[0].likes}</Card.Text>\n            </li>\n            <li className=\"singleChallengeList\">\n              <Card.Header>Picked Up By</Card.Header>\n              <br></br>\n              <Card.Text>{this.state.challenge[0].fulfilledBy_id}</Card.Text>\n            </li>\n            <Link to=\"/pickedchallenges\">\n              <button className=\"greenButton\" onClick={this.handleClick}>\n                Click here to pick the challenge for yourself\n              </button>\n            </Link>\n\n            <button className=\"greenButton\" onClick={this.incrementMe}>\n              Likes: {this.state.challenge[0].likes}{\" \"}\n            </button>\n            <Upload />\n            <button className=\"greenButton\" onClick={this.challengeComplete}>\n              Status: {this.state.challenge[0].status}\n            </button>\n          </Card>\n        </ul>\n      </div>\n    );\n  }\n}\nsingleChallenge.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(singleChallenge);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getCreatedChallenges } from \"../../utils/challengesAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\n\nclass MyChallengeList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      challenge: [],\n    };\n  }\n\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    getCreatedChallenges(this.props.auth).then((res) =>\n      this.setState({ challenge: res.data })\n    );\n  }\n\n  render() {\n    // const { user } = this.props.auth;\n    return (\n      <div>\n        <h1>Challenges below</h1>\n        {this.state.challenge.map((c) => (\n          <>\n            <ul>\n              <Card>\n                <Card.Header as=\"h4\">\n                  <Link\n                    to={{\n                      pathname: `/challenge`,\n                      state: {\n                        _id: c._id,\n                      },\n                    }}\n                  >\n                    <li>{c.name}</li>\n                  </Link>\n                </Card.Header>\n                <Card.Text>\n                  <li></li>\n                  <li>Category: {c.category}</li>\n                  <li>Goal: {c.goal} Likes</li>\n                  <li>Current Likes: {c.likes}</li>\n                  <li>Description: {c.shortDescription}</li>\n                </Card.Text>\n              </Card>\n            </ul>\n          </>\n        ))}\n      </div>\n    );\n  }\n}\nMyChallengeList.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(MyChallengeList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getPickedChallenges } from \"../../utils/challengesAPI\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\n\nclass PickedChallengeList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      challenges: [],\n    };\n  }\n\n  onLogoutClick = (e) => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    getPickedChallenges(this.props.auth).then((res) =>\n      this.setState({ challenges: res.data })\n    );\n  }\n  render() {\n    // const { user } = this.props.auth;\n    return (\n      <div>\n        <h1>CHALLENGES TO COMPLETE</h1>\n        {this.state.challenges.map((c) => (\n          <>\n            <ul>\n              <Card>\n                <Card.Header as=\"h4\">\n                  <Link\n                    to={{\n                      pathname: `/challenge`,\n                      state: {\n                        _id: c._id,\n                      },\n                    }}\n                  >\n                    <li>{c.name}</li>\n                  </Link>\n                </Card.Header>\n                <Card.Text>\n                  <li>Category: {c.category}</li>\n                  <li>Goal: {c.goal} likes</li>\n                  <li>{c.shortDescription}</li>\n                  <li>{c.description}</li>\n                  <li>Current Likes: {c.likes}</li>\n                </Card.Text>\n                <li>\n                  {\" \"}\n                  <Card.Header as=\"h5\">\n                    {c.fulfilledBy_id\n                      ? \"Challenge already completed!\"\n                      : \"Still needs completing....\"}\n                  </Card.Header>\n                </li>\n              </Card>\n            </ul>\n          </>\n        ))}\n      </div>\n    );\n  }\n}\nPickedChallengeList.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { logoutUser })(PickedChallengeList);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"../actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport Navbar from \"./layout/Navbar\";\nimport Landing from \"./layout/Landing\";\nimport Register from \"./auth/Register\";\nimport Login from \"./auth/Login\";\nimport PrivateRoute from \"./private-route/PrivateRoute\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport Challenges from \"./challenges/challenges\";\nimport Charities from \"./charities/charities\";\nimport Category from \"./challenges/category\";\nimport Footer from \"./layout/Footer\";\nimport createChallenge from \"./challenges/challengeNew\";\nimport singleChallenge from \"./challenges/challenge\";\nimport MyCreatedChallenge from \"./challenges/createdchallenges\";\nimport PickedChallenges from \"./challenges/pickedchallenges\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"container\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/charities\" component={Charities} />\n            <Route exact path=\"/category\" component={Category} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/challenges\" component={Challenges} />\n              <PrivateRoute\n                exact\n                path=\"/create_challenge\"\n                component={createChallenge}\n              />\n              <PrivateRoute\n                exact\n                path=\"/challenge\"\n                component={singleChallenge}\n              />\n              <PrivateRoute\n                exact\n                path=\"/mycreatedchallenges\"\n                component={MyCreatedChallenge}\n              />\n              <PrivateRoute\n                exact\n                path=\"/pickedchallenges\"\n                component={PickedChallenges}\n              />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}